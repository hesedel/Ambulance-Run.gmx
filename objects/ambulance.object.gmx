<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_ambulance</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>acceleration</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>.01</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>deceleration</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>.01</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>deceleration_break</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>.05</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed_current</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed_max</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed_reverse_max</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// prevent ambulance from veering off the road to the right
if(
    !ambulance_onExit() &amp;&amp;
    !place_meeting(x + sprite_width,y,roads)
) {
    x = instance_place(x,y,roads).x +
        instance_place(x,y,roads).sprite_width -
        (sprite_width / 2);
}

// prevent ambulance from veering off the road to the left
if(
    !ambulance_onExit() &amp;&amp;
    !place_meeting(x - sprite_width,y,roads)
) {
    x = instance_place(x,y,roads).x +
        (sprite_width / 2);
}

// exits
/*
if(ambulance_onExit()) {

    if(!place_meeting(x + sprite_width,y,exits)) {
        x_sprite = x;
        while(!place_meeting(x_sprite + sprite_width,y,exits)) {
            x_sprite -= .1;
        }
        x = x_sprite;
    }

    if(!place_meeting(x - sprite_width,y,exits)) {
        x_sprite = x;
        while(!place_meeting(x_sprite - sprite_width,y,exits)) {
            x_sprite += .1;
        }
        x = x_sprite;
    }

}
*/

// exits
if(place_meeting(x,y,exits)) {

    if(
        place_meeting(x - sprite_width - 16,y,exits_ne) &amp;&amp;
        y &lt; instance_place(x,y,exits_ne).y + (instance_place(x,y,exits_ne).sprite_height / 2)
    ) {
        instance = instance_place(x,y,exits_ne);
        arc_r = (instance.sprite_height / 2) - 32;
        arc_y = y - (instance.y + 32);
        if(arc_y &lt; 0)
            arc_y = 0;
        x = instance.x + 16 + 32 + (arc_r - sqrt(sqr(arc_r) - sqr(arc_r - arc_y)));
        
        // angle
        percent = 1 - (arc_y / arc_r);
        image_angle = -(percent * 90);
    }

    if(
        place_meeting(x + sprite_width + 16,y,exits_nw) &amp;&amp;
        y &lt; instance_place(x,y,exits_nw).y + (instance_place(x,y,exits_nw).sprite_height / 2)
    ) {
        instance = instance_place(x,y,exits_nw);
        arc_r = (instance.sprite_height / 2) - 32;
        arc_y = y - (instance.y + 32);
        if(arc_y &lt; 0)
            arc_y = 0;
        x = instance.x + instance.sprite_width - 16 - 32 - (arc_r - sqrt(sqr(arc_r) - sqr(arc_r - arc_y)));

        // angle
        percent = 1 - (arc_y / arc_r);
        image_angle = percent * 90;
    }

    if(
        place_meeting(x - sprite_width - 16,y,exits_se) &amp;&amp;
        y &gt; instance_place(x,y,exits_se).y + (instance_place(x,y,exits_se).sprite_height / 2)
    ) {
        instance = instance_place(x,y,exits_se);
        arc_r = (instance.sprite_height / 2) - 32;
        arc_y = y - (instance.y + (instance.sprite_height / 2));
        if(arc_y &gt; abs(instance.y_init + (instance.sprite_height / 2)) - 32)
            arc_y = abs(instance.y_init + (instance.sprite_height / 2)) - 32;
        x = instance.x + 16 + 32 + (arc_r - sqrt(sqr(arc_r) - sqr(arc_y)));

        // angle
        percent = arc_y / arc_r;
        image_angle = percent * 90;
    }

    if(
        place_meeting(x + sprite_width + 16,y,exits_sw) &amp;&amp;
        y &gt; instance_place(x,y,exits_sw).y + (instance_place(x,y,exits_sw).sprite_height / 2)
    ) {
        instance = instance_place(x,y,exits_sw);
        arc_r = (instance.sprite_height / 2) - 32;
        arc_y = y - (instance.y + (instance.sprite_height / 2));
        if(arc_y &gt; abs(instance.y_init + (instance.sprite_height / 2)) - 32)
            arc_y = abs(instance.y_init + (instance.sprite_height / 2)) - 32;
        x = instance.x + instance.sprite_width - 16 - 32 - (arc_r - sqrt(sqr(arc_r) - sqr(arc_y)));

        // angle
        percent = arc_y / arc_r;
        image_angle = -(percent * 90);
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
