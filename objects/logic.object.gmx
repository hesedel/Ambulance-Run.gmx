<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score_distance</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score_accumulated</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>road</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>ambulance</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>224</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>416</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(
    keyboard_check(vk_up) ||
    (
        keyboard_check(vk_down) &amp;&amp;
        (
            road.y + (ambulance.speed_current / ambulance.deceleration) &gt; 0 &amp;&amp;
            road.y + (ambulance.speed_current / ambulance.deceleration) &gt; road.y_current - room_height
        )
    )
)
    road.y += ambulance_accelerate(); // move ambulance forward or reverse
else
    road.y += ambulance_decelerate(); // stop ambulance

with(ambulance) {

    // collisions
    if(
        collision_line(
            x - (sprite_width / 2),y - (sprite_height / 2),
            x + (sprite_width / 2),y - (sprite_height / 2),
            vehicles,false,false
        )
    ) {
        speed_current = 0;
    }
    
    if(!vehicle_onExit(ambulance))
        image_angle = 0;

    if(
        keyboard_check(vk_right) &amp;&amp;
        !vehicle_onExit(ambulance)
    ) {
        if(speed_current &gt; 0) { // forward
            image_angle = -abs(speed_current);
        } else if(speed_current &lt; 0) { // reverse
            image_angle = abs(speed_current) * 2;
        }

        // strafe ambulance right
        if(
            place_meeting(x + sprite_width,y,roads) ||
            place_meeting(x + sprite_width,y,exits)
        )
            x += abs(speed_current) / 2;

    }

    if(
        keyboard_check(vk_left) &amp;&amp;
        !vehicle_onExit(ambulance)
    ) {
        if(speed_current &gt; 0) { // forward
            image_angle = abs(speed_current);
        } else if(speed_current &lt; 0) { // reverse
            image_angle = -(abs(speed_current) * 2);
        }

        // strafe ambulance left
        if(
            place_meeting(x - sprite_width,y,roads) ||
            place_meeting(x - sprite_width,y,exits)
        )
            x -= abs(speed_current) / 2;

    }

    // getting sirens
    if(instance_place(x,y,siren)) {
        with(instance_place(x,y,siren)) {
            instance_destroy();
        }
        if(sirens &lt; 3) {
            sirens++;
        }
        logic.score_accumulated += 1000;
    }

}

// set score
score_distance = floor(road.y);
score = score_distance + score_accumulated;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// draw score
draw_set_color(make_color_rgb(0, 0, 0));
draw_set_alpha(.75);
draw_rectangle((room_width * (5 / 8)), 0, room_width, room_height, false);
draw_set_color(make_color_rgb(255, 255, 255));
draw_set_alpha(1);
draw_text((room_width * (2 / 3)), (16 * 1), 'Score: ' + string(score));
draw_text((room_width * (2 / 3)), (16 * 3), 'Sirens: ' + string(ambulance.sirens));
draw_text((room_width * (2 / 3)), (16 * 4), 'Press [SPACEBAR]');
draw_text((room_width * (2 / 3)), (16 * 5), 'to activate a Siren.');
draw_set_color(make_color_rgb(0, 0, 0));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ambulance.sirens &gt; 0 &amp;&amp; ambulance.siren_timeout == 0) {
    ambulance.sirens--;
    ambulance.siren_timeout = 60 * 10;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
